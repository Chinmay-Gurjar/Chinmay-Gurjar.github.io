<rss version="2.0"
xmlns:content="http://purl.org/rss/1.0/modules/content/"
xmlns:wfw="http://wellformedweb.org/CommentAPI/"
xmlns:dc="http://purl.org/dc/elements/1.1/"
xmlns:atom="http://www.w3.org/2005/Atom"
xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
>
    <channel>
        <title>Blog</title>
        <atom:link href="http://chinmay-gurjar.github.io/categories/" rel="self" type="application/rss+xml" />
        <link>http://chinmay-gurjar.github.io/categories/</link>
        <description>
            Chinmay's Blog
        </description>
        <generator>Hugo -- gohugo.io</generator><lastBuildDate>Sun, 30 Aug 2020 19:26:50 &#43;0530</lastBuildDate><item>
    <title>GSoC Final Report</title>
    <link>http://chinmay-gurjar.github.io/posts/final-report/</link>
    <dc:creator>Chinmay</dc:creator>
    <pubDate>Sun, 30 Aug 2020 19:26:50 &#43;0530</pubDate>

    <guid>http://chinmay-gurjar.github.io/posts/final-report/</guid>
    <description><![CDATA[I&rsquo;ve been working on Music for the past three months, adding support for remote sources. The work included adding support for dLeyna and DMAP source for Music.
Why is this project needed:
Music currently list and plays songs only from the local filesystem (that are indexed by Tracker), there is no way to browse and play songs from remote sources such as DLNA and DAAP.
Most of the users have their media on media servers and not on file-system, right now if there are no songs on the computer an empty search view is created notifying you that no songs are present on the computer.]]></description>
    <content:encoded><![CDATA[<p>I&rsquo;ve been working on Music for the past three months, adding support for remote sources. The work included adding support for dLeyna and DMAP source for Music.</p>
<p><strong>Why is this project needed:</strong><br>
Music currently list and plays songs only from the local filesystem (that are indexed by Tracker), there is no way to browse and play songs from remote sources such as DLNA and DAAP.<br>
Most of the users have their media on media servers and not on file-system, right now if there are no songs on the computer an empty search view is created notifying you that no songs are present on the computer.</p>
<p><strong>Some frameworks important to the project</strong><br>
Grilo is a framework focused on making media discovery and browsing easy for application developers, and Music uses grilo-plugins for media discovery. Grilo plugins support tons of sources such as Tracker, Jamendo, UPnP, etc.<br>
Grilo-plugins also supports dLeyna(for DLNA) and DMAP(for DAAP) sources, so I&rsquo;ll be using grilo-plugins for media discovery from DLNA and DAAP servers.</p>
<p>dLeyna-server is a high-level media content API that allows client applications to discover, browse, and search UPnP and DLNA media servers and is implemented over the GUPnP library. This takes care of all the communication between the server and the grilo-plugins. When we make any request to the server, grilo-plugins relay the request using dLeyna-server, and dLeyna-server uses GUPnP to actually make requests to the media server.</p>
<p>Libdmapsharing is a library that allows programs to access, share, and control the playback of media content using DMAP.</p>
<p><strong>My project includes the following tasks:</strong></p>
<ol>
<li>Adding support for dLeyna sources</li>
<li>Adding support for DAAP sources</li>
<li>Customizing search view to support various sources</li>
</ol>
<h3 id="dleyna-support">dLeyna Support</h3>
<p>Related Issue: <a href="https://gitlab.gnome.org/GNOME/gnome-music/-/issues/396" target="_blank" rel="noopener noreffer">#396</a></p>
<p>Related Merge Request: <a href="https://gitlab.gnome.org/GNOME/gnome-music/-/merge_requests/713" target="_blank" rel="noopener noreffer">!713</a></p>
<p>dLeyna source is based on UPnP protocol that allows us to use media server with no configuration i.e. a zero-conf server, it is also the most commonly used media server, as it is easy to set up.<br>
This feature will not require any additional configuration, to see media hosted on the home network, just shoot up the Music application and the media from the dLeyna source will be added to the respective views.</p>
<h3 id="daap-support">DAAP Support</h3>
<p>Related Merge Request: <a href="https://gitlab.gnome.org/GNOME/gnome-music/-/merge_requests/740" target="_blank" rel="noopener noreffer">!740</a></p>
<p><strong>Problem:</strong><br>
The DAAP(or DMAP) protocol is built and used by Apple devices, so they haven&rsquo;t released the specifications publically, but it has been reverse-engineered to the extent that media can be discovered and played on the other platforms(other than macOS).
It really restricts us with the level of support, the media we get often do not contain enough data.<br>
Right now a minimal support is provided in Music, this just list songs from DAAP server and can play them, but this doesn&rsquo;t have all the media metadata such as artist, date, genre, etc.(it only displays the information given by the server)</p>
<p>This feature also doesn&rsquo;t need any configuration, just connect to your home network that already has a DAAP server, and Music will list all the songs hosted and you will be able to play them.</p>
<h5 id="what-works">What Works</h5>
<ol>
<li>Music can fetch media from dLeyna sources and play them.</li>
<li>Search works for dLeyna sources.</li>
<li>Music can fetch media from DAAP sources and play them, but it doesn&rsquo;t have all the information that should be associated with a media.</li>
</ol>
<h5 id="future-plans">Future Plans</h5>
<ol>
<li>Search Redesign and customization to take in and filter the media from different sources.</li>
<li>Addressing some of the issues with dLeyna sources.</li>
</ol>
<h3 id="gnome-community">GNOME Community</h3>
<p>This is the first time I&rsquo;ve ever worked on a proper open source project, GNOME as a community has taught me a lot on how to work on a project, and I&rsquo;ve to hand it to Jean Felder and Marinus Schraal, who have always been there to help me. I&rsquo;ve also had encounters with Victor Toso and Jens Georg and these guys were really helpful, especially Jens listening to me patiently and helping me with very simple things.</p>
<h4 id="guadec">GUADEC</h4>
<p>GUADEC is the GNOME community&rsquo;s conference, which brings together users, developers, and community members for a week-long package of events. Each talk very informative and I learned a lot from these talks.</p>
<p>GUADEC had an event for GSoC and Outreachy interns where we got to present our projects (HOW COOL IS THAT!!).</p>
<h3 id="conclusion">Conclusion</h3>
<p>GSoC may have come to an end, but this doesn&rsquo;t mark an end to my journey with GNOME, I would still be around contributing to Music and other projects.<br>
At last, I would like to thank Jean and Marinus with all my heart for their support and guidance.</p>
]]></content:encoded>
</item><item>
    <title>Chapter 4: Adventures With Change Tracking</title>
    <link>http://chinmay-gurjar.github.io/posts/mini-story1/</link>
    <dc:creator>Chinmay</dc:creator>
    <pubDate>Wed, 12 Aug 2020 19:26:50 &#43;0530</pubDate>

    <guid>http://chinmay-gurjar.github.io/posts/mini-story1/</guid>
    <description><![CDATA[So This week I was working on change tracking in Music.
What is change Tracking?
So change tracking is a mechanism to let the source know that there have been some changes in the server data, and your client should adapt to those changes. For example, let&rsquo;s say we have an album and, I deleted a song from that album, so my source sends a signal to my client that there is a change in album container and, you need to update it accordingly.]]></description>
    <content:encoded><![CDATA[<p>So This week I was working on change tracking in Music.</p>
<p><em>What is change Tracking?</em><br>
So change tracking is a mechanism to let the source know that there have been some changes in the server data, and your client should adapt to those changes. For example, let&rsquo;s say we have an album and, I deleted a song from that album, so my source sends a signal to my client that there is a change in album container and, you need to update it accordingly.</p>
<p>We had to implement the same thing in Music. There was one problem with dleyna-server, But wait, what is dleyna-server? it is a set of services that allow clients to discover and manipulate media from DLNA server.<br>
So the problem with dleyna-server is that it changes the media id set by DLNA server to its own path, although the path is unique for each item, it couldn&rsquo;t be used to trace back to the element. I needed DLNA id to query the element, which was not possible with the path property.<br>
To overcome this problem what I did was,  I added an ID property to the media objects, that had the original IDs of object straight from DLNA sources. And now these IDs could be used for querying the elements from the DLNA source.</p>
<p>Now there&rsquo;s a major problem with DLNA sources that, there is no defined structure to the server. Each provider has its own implementation, and hence a different structure. So there can be two or more containers for albums.<br>
The problem was when a song from the server is changed, there is no way to tell for sure which container id we&rsquo;ll get. To get over this problem what we do now is query all the albums and artists whenever we get a content-changed signal.</p>
<p>It was later in the week that I came to know that there was functionality in grilo-plugins that lets me get complete media from the path property, and I didn&rsquo;t need the changes in dleyna-server for change tracking. But still, it would be great to have actual ids so that we can query media using ids.</p>
]]></content:encoded>
</item><item>
    <title>Chapter 3: The Second Mountain</title>
    <link>http://chinmay-gurjar.github.io/posts/pass/</link>
    <dc:creator>Chinmay</dc:creator>
    <pubDate>Wed, 05 Aug 2020 19:26:50 &#43;0530</pubDate>

    <guid>http://chinmay-gurjar.github.io/posts/pass/</guid>
    <description><![CDATA[So, last month I added support for DLNA sources, and this month was supposed to be for DAAP sources, but there are a lot of things still going on with DLNA sources. There was a lot of stuff that was missing and I&rsquo;m going to talk about problems with some of them.
Progress with DLNA
One of the main ones was the latency and processing power of the media servers. Whenever we work with servers, we dump in queries on them, and a large enough query can make our media server freeze, so it&rsquo;s better to load data in small chunks from our end so that we can guarantee smooth media extraction from the server.]]></description>
    <content:encoded><![CDATA[<p>So, last month I added support for DLNA sources, and this month was supposed to be for DAAP sources,  but there are a lot of things still going on with DLNA sources. There was a lot of stuff that was missing and I&rsquo;m going to talk about problems with some of them.</p>
<p><strong>Progress with DLNA</strong></p>
<p>One of the main ones was the latency and processing power of the media servers. Whenever we work with servers, we dump in queries on them, and a large enough query can make our media server freeze, so it&rsquo;s better to load data in small chunks from our end so that we can guarantee smooth media extraction from the server.</p>
<p>For DLNA sources, search and query are kinds of same functions. While searching a media server, a search query needs to be given and that is how we query a UPnP media server. Gnome Music depends highly on querying sources for media data, and while testing with different servers, we noticed that some media server only support search and not the query functionality(WIERD, right ?). So need a way to check for search capabilities and query capabilities individually. This issue is still unresolved.</p>
<p>Music traditionally extracts songs, albums, and artists simultaneously. We use songs to populate music, album and artist views, and albums to populate artist and album views. When working with servers, it cannot be ensured that we get songs before albums or albums before artists. So to tackle this one, we had to hard force Music to extract songs, albums, and artists in mentioned order for dleyna source.</p>
<p><strong>Progress with DAAP</strong></p>
<p>I also added support for DAAP, but it is far from being complete. Unlike DLNA sources, DAAP is supported mostly for Apple devices, and I&rsquo;m on a Linux machine. I&rsquo;m using Rhythmbox for my DAAP server(Yes, Rhythmbox has an inbuilt DAAP server, you just need to enable it). Like I already mentioned Music depends on queries for getting media from the server, DAAP servers which I use for testing bench doesn&rsquo;t have search functionality. That is why we need to depend on browsing data, which doesn&rsquo;t leave us with a lot of flexibility.<br>
Apart from the implementation, one thing which took up a lot of time was getting Music to talk to my DAAP server in flatpak. A DAAP server talks over an Avahi dbus to Music.</p>
<p>There are still some functionalities left to implement in DLNA, such as change-tracking and some album art things. So I&rsquo;m going to work on some backlogs and search redesign in the coming month.</p>
]]></content:encoded>
</item><item>
    <title>Chapter 2: The First Mountain</title>
    <link>http://chinmay-gurjar.github.io/posts/passes-the-first-mountain/</link>
    <dc:creator>Chinmay</dc:creator>
    <pubDate>Thu, 09 Jul 2020 19:26:50 &#43;0530</pubDate>

    <guid>http://chinmay-gurjar.github.io/posts/passes-the-first-mountain/</guid>
    <description><![CDATA[It has been a month since the coding period has begun. And it is going great, we have managed to get most of the work for the first milestone done. This month&rsquo;s work included adding support for DLNA sources to Music, so that it can list and play media from the DLNA server.
FIRST THINGS FIRST !
What is DLNA and DLNA media server? Digital Living Network Alliance, or as we know it, DLNA, is a set of rules and specs that specifies standards and guidelines for media streaming devices.]]></description>
    <content:encoded><![CDATA[<p>It has been a month since the coding period has begun. And it is going great, we have managed to get most of the work for the first milestone done.
This month&rsquo;s work included adding support for DLNA sources to Music, so that it can list and play media from the DLNA server.</p>
<p><em>FIRST THINGS FIRST !</em></p>
<p>What is DLNA and DLNA media server?
Digital Living Network Alliance, or as we know it, DLNA, is a set of rules and specs that specifies standards and guidelines for media streaming devices. DLNA-compatible devices use UPnP(Universal Plug and Play) to communicate with other DLNA devices.</p>
<p>Once a DLNA media server is plugged into a &ldquo;Home Network&rdquo;(LAN), it can browse, open/play, search, download or upload any type of media for you.
I&rsquo;m using Rygel as a DLNA server, and for all the testing.</p>
<p>My GSoC project is to add support for the remote sources in Music, and this coding period I added support for DLNA/UPnP sources.
So each manufacturer usually produces its DLNA-compliant device, and have to implement some very low-level UPnP APIs. To save us from the misery of writing such APIs, we use dLeyna.</p>
<p>Now, what is dLeyna?
dLeyna is a set of middleware components that is designed to simplify the task of writing DLNA enabled applications. These applications can be servers, renderers, players, or remotes. The dLeyna APIs are much higher level and easier to use than the underlying UPnP APIs upon which dLeyna depends.</p>
<p><strong>So what did I implement this coding period and the problems I faced?</strong></p>
<p>Up until now, users have had just a single option to play songs in Music, if you want to play them, get them in your file system. But with this month of work, now Music users can play songs from a DLNA media server connected to their local network. The barebone of the feature is complete, and Music can serve its user with songs from the media server. We still have some issues to resolve before merging it.
In Music we have separate <code>Grilo Wrappers</code> for each source, since I was working on Dleyna source, mine was called <code>GrlDleynaWrapper</code>. So, DleynaWrapper is supposed to have all the functions related to the source. These functions included querying the source for retrieving songs, albums and artists from the server, getting album arts, albums for artists, and some other stuff.
Now there are some problems with the current implementations. Since we use grilo-plugins for all our sources, dleyna also has to depend on grilo-plugins for media discovery. While it does an awesome job for most of the part, there are some of the places where it doesn&rsquo;t correctly fit the pieces.</p>
<p>Some Issues that I ran into :</p>
<ul>
<li>
<p>Music depends heavily on search queries to retrieve media items from Dleyna source, so there has to be a way to check whether the Dleyna source supports search or not. If a Dleyna source does not support search(or if its containers aren&rsquo;t searchable), it should not be allowed to query the source. So we can add a function in grilo-plugins to check for the search capabilities.</p>
</li>
<li>
<p>In Music, we prefer to use the album&rsquo;s artist to populate our artist view, but the problem with dleyna source is that it does not extract and store artist for albums. So for now, we have to rely on music items carrying their artist to populate the view. It can be resolved by letting album containers have their artist, and then these artists can be used to populate the views. But it really depends on how each server serves data.</p>
</li>
<li>
<p>Some albums especially the long ones, often have discs that replicate the actual physical discs. UPnP and in turn DLNA, specs don&rsquo;t specify media items to contain disks. But there&rsquo;s a thing with album containers in UPnP, they may contain other containers and these containers act as discs.</p>
</li>
<li>
<p>The album art is supposed to be in the <code>upnp:albumArtURI</code> property of the albums, but most of the servers do not put album arts in the album container, instead it is set in the media items.</p>
</li>
</ul>
<p>Well, some of the issues are really server dependent. Since I&rsquo;m using Rygel, maybe I&rsquo;ll try and add the above-mentioned changes in it.</p>
<p>Hey, you guys can check my MR <a href="https://gitlab.gnome.org/GNOME/gnome-music/-/merge_requests/713" target="_blank" rel="noopener noreffer">here</a> and maybe help me in improving it.</p>
<p>Lastly, I would like to thank, my mentor Jean Felder, and Marinus Schraal, who have been patiently supporting and helping me.</p>
<p>Until next time !!</p>
]]></content:encoded>
</item><item>
    <title>Chapter 1: A New Tale Begins</title>
    <link>http://chinmay-gurjar.github.io/posts/getting-selected/</link>
    <dc:creator>Chinmay</dc:creator>
    <pubDate>Sun, 17 May 2020 19:26:50 &#43;0530</pubDate>

    <guid>http://chinmay-gurjar.github.io/posts/getting-selected/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/GSoCbg.png" referrerpolicy="no-referrer">
            </div>It was around 23:25(IST) on the 4th of May, my brother and I were glued to our phone screens, the GSoC webpage open, eagerly waiting for the results (he was visibly the more excited one). And BAM! 23:31, I saw my name on the GSoC website. Then followed a tsunami of “congratulations”. I&rsquo;ve been accepted into GSoC to work with GNOME.
I applied for the Music project under GNOME. I’ve always fancied music, making music and now I wanted to make a music player to play that music.]]></description>
    <content:encoded><![CDATA[<div class="featured-image">
                <img src="/GSoCbg.png" referrerpolicy="no-referrer">
            </div><p>It was around 23:25(IST) on the 4th of May, my brother and I were glued to our phone screens, the GSoC webpage open, eagerly waiting for the results (he was visibly the more excited one). And BAM! 23:31, I saw my name on the GSoC website. Then followed a tsunami of “congratulations”. <strong>I&rsquo;ve been accepted into GSoC to work with GNOME</strong>.</p>
<p>I applied for the <a href="https://wiki.gnome.org/Apps/Music" target="_blank" rel="noopener noreffer">Music</a> project under GNOME. I’ve always fancied music, making music and now I wanted to make a music player to play that music. So, when I saw the <a href="https://wiki.gnome.org/Apps/Music" target="_blank" rel="noopener noreffer">Music</a> listed for GSoC, I knew, I just knew that it was the “one”. I started contributing to the project and made some minor fixes, here and there. Those fixes taught me a lot about open source.</p>
<p>The enthusiasm I have for GNOME stems from the following:</p>
<ul>
<li>
<p>Anyone who knows about open source software, probably knows GNOME, so it was kind of prestigious to work with GNOME.</p>
</li>
<li>
<p>GNOME community is very helpful and supportive.</p>
</li>
<li>
<p>Majority of Linux population uses GNOME as their Desktop Environment, implementing a feature that’ll be used by these many people, is thrilling in itself.</p>
</li>
</ul>
<p>So, this summer I’ll be working on Music to add remote sources support. This will allow Music to list and play the songs stored on media servers such as DLNA and DAAP. Jean Felder will be mentoring me during the whole process, and I hope to learn a lot from him.</p>
<p>I really want to thank Jean and Marinus who helped and guided me during this whole process.</p>
<p>I am really looking forward to work on this project!!</p>
]]></content:encoded>
</item></channel>
</rss>
